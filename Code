#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MaximumCustomers 100

typedef struct {
    int account_number;
    char name[100];
    float balance;
} Customer;

// Function declarations
void create_account(Customer customers[], int *num_customers);
void deposit_money(Customer customers[], int num_customers);
void withdraw_money(Customer customers[], int num_customers);
void check_balance(Customer customers[], int num_customers);
int find_customer_by_account(Customer customers[], int num_customers, int account_number);

int main() {
    Customer customers[MaximumCustomers];
    int num_customers = 0;
    int choice;

    while (1) {
        printf("\n--- Bank Management System ---\n");
        printf("1. Create Account\n");
        printf("2. Deposit Money\n");
        printf("3. Withdraw Money\n");
        printf("4. Check Balance\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                create_account(customers, &num_customers);
                break;
            case 2:
                deposit_money(customers, num_customers);
                break;
            case 3:
                withdraw_money(customers, num_customers);
                break;
            case 4:
                check_balance(customers, num_customers);
                break;
            case 5:
                printf("Exiting the program...\n");
                exit(0);
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }

    return 0;
}

// Function to create a new account
void create_account(Customer customers[], int *num_customers) {
    if (*num_customers >= MaximumCustomers) {
        printf("Error: Maximum number of customers reached!\n");
        return;
    }

    Customer new_customer;
    new_customer.account_number = *num_customers + 1;

    printf("Enter name: ");
    getchar(); // This is to consume any leftover newline character
    scanf(" %[^\n]s", new_customer.name);  // Reads the entire line, including spaces

    new_customer.balance = 0.0;

    customers[*num_customers] = new_customer;
    (*num_customers)++;

    printf("Account created successfully! Your account number is %d\n", new_customer.account_number);
}

// Function to deposit money into an account
void deposit_money(Customer customers[], int num_customers) {
    int account_number;
    float amount;

    printf("Enter account number: ");
    scanf("%d", &account_number);

    int index = find_customer_by_account(customers, num_customers, account_number);
    if (index == -1) {
        printf("Error: Account not found!\n");
        return;
    }

    printf("Enter amount to deposit: ");
    scanf("%f", &amount);

    if (amount < 0) {
        printf("Error: Invalid deposit amount!\n");
        return;
    }

    customers[index].balance += amount;
    printf("Deposit successful! New balance: %.2f\n", customers[index].balance);
}

// Function to withdraw money from an account
void withdraw_money(Customer customers[], int num_customers) {
    int account_number;
    float amount;

    printf("Enter account number: ");
    scanf("%d", &account_number);

    int index = find_customer_by_account(customers, num_customers, account_number);
    if (index == -1) {
        printf("Error: Account not found!\n");
        return;
    }

    printf("Enter amount to withdraw: ");
    scanf("%f", &amount);

    if (amount > customers[index].balance) {
        printf("Error: Insufficient balance!\n");
        return;
    }

    customers[index].balance -= amount;
    printf("Withdrawal successful! New balance: %.2f\n", customers[index].balance);
}

// Function to check account balance
void check_balance(Customer customers[], int num_customers) {
    int account_number;

    printf("Enter account number: ");
    scanf("%d", &account_number);

    int index = find_customer_by_account(customers, num_customers, account_number);
    if (index == -1) {
        printf("Error: Account not found!\n");
        return;
    }

    printf("Account Number: %d\n", customers[index].account_number);
    printf("Customer Name: %s\n", customers[index].name);
    printf("Current Balance: %.2f\n", customers[index].balance);
}

// Helper function to find a customer by account number
int find_customer_by_account(Customer customers[], int num_customers, int account_number) {
    for (int i = 0; i < num_customers; i++) {
        if (customers[i].account_number == account_number) {
            return i;
        }
    }
    return -1; // Customer not found
}
